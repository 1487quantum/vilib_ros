#!/usr/bin/env python
PACKAGE = "vilib_ros"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

# Frame preprocessing
gen.add("FRAME_IMAGE_PYRAMID_LEVELS",  int_t,   0, "Pyramid level (Preprocessing)", 6,  1, 6)
# Feature detection options
gen.add("FEATURE_DETECTOR_CELL_SIZE_WIDTH",  int_t,   0, "Feature detector cell width", 32,  1, 128)
gen.add("FEATURE_DETECTOR_CELL_SIZE_HEIGHT",  int_t,   0, "Feature detector cell height", 32,  1, 128)

gen.add("FEATURE_DETECTOR_MIN_LEVEL",  int_t,   0, "Feature detector min level", 0,  0, 4)
gen.add("FEATURE_DETECTOR_MAX_LEVEL",  int_t,   0, "Feature detector max level", 5,  1, 6)

gen.add("FEATURE_DETECTOR_HORIZONTAL_BORDER",  int_t,   0, "Horizontal feature detector padding", 0,  0, 320)
gen.add("FEATURE_DETECTOR_VERTICAL_BORDER",  int_t,   0, "Vertical feature detector padding", 8,  0, 320)

# FAST parameters
gen.add("FEATURE_DETECTOR_FAST_EPISLON", double_t, 0, "Threshold for feature detection",   60.0, 1.0,   200.0)
gen.add("FEATURE_DETECTOR_FAST_ARC_LENGTH", int_t, 0, "Fast Arc Length",   14, 1,   20)
fast_type_enum = gen.enum([ 
gen.const("SUM_OF_ABS_DIFF_ON_ARC",      int_t, 0, "Sum of absolute differences"),
gen.const("MAX_THRESHOLD",     int_t, 1, "Maximum threshold value")
],"FAST_SCORE Setter")
gen.add("FEATURE_DETECTOR_FAST_SCORE", int_t, 0, "Select FAST_SCORE method", 0, 0, 1, edit_method=fast_type_enum)


exit(gen.generate(PACKAGE, "vilib_ros", "tracker_param"))
