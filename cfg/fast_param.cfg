#!/usr/bin/env python
PACKAGE = "vilib_ros"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

grpFT = gen.add_group("Feature_detection")
# Frame preprocessing
grpFP = grpFT.add_group("i_Frame_preprocessing")
grpFP.add("PYRAMID_LEVELS",  int_t,   0, "Image Pyramid level", 6,  1, 6)
grpFP.add("PYRAMID_MIN_LEVELS",  int_t,   0, "Image Pyramid level", 0,  1, 6)

# FAST detector parameters
grpFAST = grpFT.add_group("ii_FAST_params")
grpFAST.add("FAST_EPSILON", double_t, 0, "Threshold for feature detection",   60.0, 1.0,   200.0)
grpFAST.add("FAST_MIN_ARC_LENGTH", int_t, 0, "Minimum arc length",   10, 1,   20)
fast_type_enum = gen.enum([ 
gen.const("SUM_OF_ABS_DIFF_ON_ARC",      int_t, 0, "Sum of absolute differences"),
gen.const("MAX_THRESHOLD",     int_t, 1, "Maximum threshold value")
],"FAST_SCORE Setter")
grpFAST.add("FAST_SCORE", int_t, 0, "Select FAST_SCORE method", 0, 0, 1, edit_method=fast_type_enum)

# NMS parameters
grpNMS = grpFT.add_group("iii_NMS_params")
grpNMS.add("HORIZONTAL_BORDER",  int_t,   0, "Horizontal image detection padding", 0,  0, 320)
grpNMS.add("VERTICAL_BORDER",  int_t,   0, "Vertical image detection padding", 0,  0, 320)
grpNMS.add("CELL_SIZE_WIDTH",  int_t,   0, "NMS cell width", 32,  1, 128)
grpNMS.add("CELL_SIZE_HEIGHT",  int_t,   0, "NMS cell height", 32,  1, 128)

# === Image publisher ===
grpImgPub = gen.add_group("Image_publisher")
grpImgPub.add("publish_img",   bool_t,   0, "Publish image with features",  True)

# === Graphics param ===
grpGraphics = gen.add_group("Graphics")
grpGraphics_F = grpGraphics.add_group("Features")
grpGraphics_F.add("draw_features",   bool_t,   0, "Draw features",  True)
grpGraphics_F.add("draw_features_thickness", int_t, 0, "Feature circle thickness",   2, 1,   5)
grpGraphics_R = grpGraphics.add_group("Bounding Rectangle")
grpGraphics_R.add("draw_bounding_rectangle",   bool_t,   0, "Draw bounding rectangle",  True)
grpGraphics_R.add("draw_bounding_rectangle_thickness", int_t, 0, "Bounding rectangle thickness",   2, 1,   5)

exit(gen.generate(PACKAGE, "vilib_ros", "fast_param"))
